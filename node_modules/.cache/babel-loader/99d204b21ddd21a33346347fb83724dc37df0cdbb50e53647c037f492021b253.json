{"ast":null,"code":"var _jsxFileName = \"/home/metalice/hackathon/vol_6/Front_jinro/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatApp = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const handleInputChange = event => {\n    setInput(event.target.value);\n  };\n  const handleSendMessage = () => {\n    if (input.trim() !== '') {\n      const newMessage = {\n        id: messages.length + 1,\n        text: input\n      };\n      setMessages([...messages, newMessage]);\n      setInput('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: message.text\n      }, message.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatApp, \"HDAtGPGcvWga1zf1TBXg51T+tsc=\");\n_c = ChatApp;\nexport default ChatApp;\nvar _c;\n$RefreshReg$(_c, \"ChatApp\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ChatApp","_s","messages","setMessages","input","setInput","handleInputChange","event","target","value","handleSendMessage","trim","newMessage","id","length","text","children","className","map","message","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","_c","$RefreshReg$"],"sources":["/home/metalice/hackathon/vol_6/Front_jinro/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\n\nconst ChatApp = () => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n\n  const handleInputChange = (event) => {\n    setInput(event.target.value);\n  };\n\n  const handleSendMessage = () => {\n    if (input.trim() !== '') {\n      const newMessage = {\n        id: messages.length + 1,\n        text: input,\n      };\n      setMessages([...messages, newMessage]);\n      setInput('');\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"chat-container\">\n        {messages.map((message) => (\n          <div key={message.id} className=\"message\">\n            {message.text}\n          </div>\n        ))}\n      </div>\n      <div className=\"input-container\">\n        <input type=\"text\" value={input} onChange={handleInputChange} />\n        <button onClick={handleSendMessage}>Send</button>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatApp;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnB,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMS,iBAAiB,GAAIC,KAAK,IAAK;IACnCF,QAAQ,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC;EAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAIN,KAAK,CAACO,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACvB,MAAMC,UAAU,GAAG;QACjBC,EAAE,EAAEX,QAAQ,CAACY,MAAM,GAAG,CAAC;QACvBC,IAAI,EAAEX;MACR,CAAC;MACDD,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEU,UAAU,CAAC,CAAC;MACtCP,QAAQ,CAAC,EAAE,CAAC;IACd;EACF,CAAC;EAED,oBACEN,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAKkB,SAAS,EAAC,gBAAgB;MAAAD,QAAA,EAC5Bd,QAAQ,CAACgB,GAAG,CAAEC,OAAO,iBACpBpB,OAAA;QAAsBkB,SAAS,EAAC,SAAS;QAAAD,QAAA,EACtCG,OAAO,CAACJ;MAAI,GADLI,OAAO,CAACN,EAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEf,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNxB,OAAA;MAAKkB,SAAS,EAAC,iBAAiB;MAAAD,QAAA,gBAC9BjB,OAAA;QAAOyB,IAAI,EAAC,MAAM;QAACf,KAAK,EAAEL,KAAM;QAACqB,QAAQ,EAAEnB;MAAkB;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChExB,OAAA;QAAQ2B,OAAO,EAAEhB,iBAAkB;QAAAM,QAAA,EAAC;MAAI;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACtB,EAAA,CAlCID,OAAO;AAAA2B,EAAA,GAAP3B,OAAO;AAoCb,eAAeA,OAAO;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}