{"ast":null,"code":"var _jsxFileName = \"/home/metalice/hackathon/vol_6/Front_jinro/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatApp = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const handleInputChange = event => {\n    setInput(event.target.value);\n  };\n  const handleSendMessage = () => {\n    if (input.trim() !== '') {\n      const newMessage = {\n        id: messages.length + 1,\n        text: input\n      };\n      setMessages([...messages, newMessage]);\n      setInput('');\n      axios.post('http://localhost:5000/message', newMessage).then(response => console.log(response)).catch(error => console.log(error));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: message.text\n      }, message.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatApp, \"HDAtGPGcvWga1zf1TBXg51T+tsc=\");\n_c = ChatApp;\nexport default ChatApp;\nvar _c;\n$RefreshReg$(_c, \"ChatApp\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ChatApp","_s","messages","setMessages","input","setInput","handleInputChange","event","target","value","handleSendMessage","trim","newMessage","id","length","text","post","then","response","console","log","catch","error","children","className","map","message","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","_c","$RefreshReg$"],"sources":["/home/metalice/hackathon/vol_6/Front_jinro/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport axios from 'axios';\n\nconst ChatApp = () => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n\n  const handleInputChange = (event) => {\n    setInput(event.target.value);\n  };\n\n  const handleSendMessage = () => {\n    if (input.trim() !== '') {\n      const newMessage = {\n        id: messages.length + 1,\n        text: input,\n      };\n      setMessages([...messages, newMessage]);\n      setInput('');\n      axios.post('http://localhost:5000/message', newMessage)\n        .then(response => console.log(response))\n        .catch(error => console.log(error));\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"chat-container\">\n        {messages.map((message) => (\n          <div key={message.id} className=\"message\">\n            {message.text}\n          </div>\n        ))}\n      </div>\n      <div className=\"input-container\">\n        <input type=\"text\" value={input} onChange={handleInputChange} />\n        <button onClick={handleSendMessage}>Send</button>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatApp;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAClB,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMU,iBAAiB,GAAIC,KAAK,IAAK;IACnCF,QAAQ,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC;EAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAIN,KAAK,CAACO,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACvB,MAAMC,UAAU,GAAG;QACjBC,EAAE,EAAEX,QAAQ,CAACY,MAAM,GAAG,CAAC;QACvBC,IAAI,EAAEX;MACR,CAAC;MACDD,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEU,UAAU,CAAC,CAAC;MACtCP,QAAQ,CAAC,EAAE,CAAC;MACZR,KAAK,CAACmB,IAAI,CAAC,+BAA+B,EAAEJ,UAAU,CAAC,CACpDK,IAAI,CAACC,QAAQ,IAAIC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC,CAAC,CACvCG,KAAK,CAACC,KAAK,IAAIH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC,CAAC;IACvC;EACF,CAAC;EAED,oBACEvB,OAAA;IAAAwB,QAAA,gBACExB,OAAA;MAAKyB,SAAS,EAAC,gBAAgB;MAAAD,QAAA,EAC5BrB,QAAQ,CAACuB,GAAG,CAAEC,OAAO,iBACpB3B,OAAA;QAAsByB,SAAS,EAAC,SAAS;QAAAD,QAAA,EACtCG,OAAO,CAACX;MAAI,GADLW,OAAO,CAACb,EAAE;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEf,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN/B,OAAA;MAAKyB,SAAS,EAAC,iBAAiB;MAAAD,QAAA,gBAC9BxB,OAAA;QAAOgC,IAAI,EAAC,MAAM;QAACtB,KAAK,EAAEL,KAAM;QAAC4B,QAAQ,EAAE1B;MAAkB;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChE/B,OAAA;QAAQkC,OAAO,EAAEvB,iBAAkB;QAAAa,QAAA,EAAC;MAAI;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC7B,EAAA,CArCID,OAAO;AAAAkC,EAAA,GAAPlC,OAAO;AAuCb,eAAeA,OAAO;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}